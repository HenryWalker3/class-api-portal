openapi: 3.0.1
info:
  x-metadata:
    apiId: class-partner-api-v1
    tags:
      - Partner
  title: Investment Reports API
  version: 1.0.0000
  description: | 
   The Investment Reports API is designed to deliver comprehensive financial reporting 
   for investment funds, focusing on trust income, asset positions, 
   investment performance, and related financial metrics. This API enables 
   users to retrieve detailed data for specific funds within a business, supporting 
   tax reporting, portfolio analysis, and investment performance tracking.

   Environments:
   - PIE base url: https://apigateway.class-pie.com.au
   - Production base url: https://apigateway.class.com.au

servers:
  - url: https://apigateway.class-test.com.au/api/1.0
    description: Test Environment

paths:
  /f/{businessCode}/{fundCode}/report-data/investment-reports/trust-income-schedule-reconciliation:
    get:
      operationId: TrustIncomeDistributionReconciliationReportData
      summary: TrustIncomeDistributionReconciliationReportData
      description: Returns the Trust Income Schedule's details in a given Trust for
        a particular financial year. This endpoint provides specific information on
        reconciliation items that is related to Tax Return purposes for individual
        and non-individual entities, where they are benficiaries entitlted to Trust
        Income and distribution.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - $ref: '#/components/parameters/groupByParam'
      - $ref: '#/components/parameters/yearParam'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustIncomeScheduleReconciliationReportGetResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrustIncomeScheduleReconciliationReportGetResponse'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.read
  /f/{businessCode}/{fundCode}/report-data/investment-reports/detailed-fund-asset-position:
    get:
      operationId: detailedFundAssetPosition
      summary: detailedFundAssetPosition
      description: A breakdown of the asset classes for the fund's holdings.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - name: atDate
        in: query
        required: true
        schema:
          type: string
          format: date
          example: 2024-07-01
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/InvestmentReports_DetailedFundAssetPosition'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.read
  /f/{businessCode}/{fundCode}/report-data/investment-reports/investment-income-by-period:
    get:
      operationId: investmentIncomeByPeriod
      summary: investmentIncomeByPeriod
      description: A summary of the income received by the fund
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
          example: '2024-07-01'
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
          example: '2025-06-30'
      - $ref: '#/components/parameters/groupByParam'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/InvestmentReports_InvestmentIncome'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.read
  /f/{businessCode}/{fundCode}/report-data/investment-reports/daily-investment-performance:
    get:
      operationId: dailyInvestmentPerformance
      summary: dailyInvestmentPerformance
      description: Provides a daily investment performance which consists of the total return (capital growth and income) for all investments.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - name: startDate
        in: query
        description: The start date for the report period.
        required: true
        schema:
          type: string
          format: date
        example: '2024-07-01'
      - name: endDate
        in: query
        description: The end date for the report period.
        required: true
        schema:
          type: string
          format: date
        example: '2025-06-30'
      - name: groupBy
        in: query
        description: The grouping method to use on the investment accounts.
        required: true
        schema:
          $ref: '#/components/schemas/HoldingAccountGrouping'
      - name: benchmarkId
        in: query
        description: benchmarkId
        required: false
        schema:
          type: string
      - name: useCachedData
        in: query
        description: Specifies whether to use cached data for the report.
        required: true
        schema:
          type: boolean
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PortfolioPerformanceData'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.read
  /f/{businessCode}/{fundCode}/report-data/investment-reports/distribution-reconciliation:
    get:
      operationId: distributionReconciliation
      summary: distributionReconciliation
      description: The Distribution Reconciliation Report data
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - $ref: '#/components/parameters/yearParam'
      - $ref: '#/components/parameters/groupByParam'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/InvestmentReports_DistributionReconciliationReport'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.read
  /f/{businessCode}/{fundCode}/report-data/investment-reports/fund-asset-position:
    get:
      operationId: fundAssetPosition
      summary: fundAssetPosition
      description: A summary of the fund's asset positions
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - name: atDate
        in: query
        description: The date at which the report should be generated for
        required: true
        schema:
          type: string
          format: date
          example: '2024-07-01'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/InvestmentReports_FundAssetPosition'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.read
  /f/{businessCode}/{fundCode}/report-data/investment-reports/investment-income-details:
    get:
      operationId: investmentIncomeDetails
      summary: investmentIncomeDetails
      description: Details of all investment income received by the fund within the supplied
        date range.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
          example: '2024-07-01'
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
          example: '2025-06-30'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/InvestmentReports_InvestmentIncomeDetails'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.read
  /f/{businessCode}/{fundCode}/report-data/investment-reports/investment-movement-and-returns:
    post:
      operationId: investmentMovementAndReturnsReport
      summary: investmentMovementAndReturnsReport
      description: Data source for the investment movement and returns report.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - name: startDate
        in: query
        description: The start date of the period to show movements for
        required: false
        schema:
          type: string
          format: date
          example: '2024-07-01'
      - name: endDate
        in: query
        description: The end date of the period to show movements for
        required: false
        schema:
          type: string
          format: date
          example: '2025-06-30'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/InvestmentReports_InvestmentMovementAndReturnsReport'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestmentReports_InvestmentMovementAndReturnsReportApiParameters'
      security:
      - Class_oAuth:
        - fund.read
  /f/{businessCode}/{fundCode}/report-data/investment-reports/investment-movement:
    get:
      operationId: investmentMovementSummary
      summary: investmentMovementSummary
      description: Provides a detailed list of transactions in a particular bank account
        or group of bank accounts for a period.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
          example: '2024-07-22'
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
          example: '2025-06-30'
      - $ref: '#/components/parameters/groupByParam'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/InvestmentReports_InvestmentMovementSummary'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.read
  /f/{businessCode}/{fundCode}/report-data/investment-reports/official-holding-valuation-details:
    get:
      operationId: investmentRevaluation
      summary: investmentRevaluation
      description: The official holding valuation for a fund.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - $ref: '#/components/parameters/yearParam'
      - $ref: '#/components/parameters/groupByParam'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/InvestmentReports_HoldingValuationDetailsSummary'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.read
  /f/{businessCode}/{fundCode}/report-data/investment-reports/rental-statement:
    get:
      operationId: rentalStatementReport
      summary: rentalStatementReport
      description: The rental propery schedule for a fund.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - $ref: '#/components/parameters/yearParam'
      - name: includeComparatives
        in: query
        description: Defalut value is False
        required: false
        schema:
          type: boolean
          example: true
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/InvestmentReports_RentalStatementReport'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.read
  /f/{businessCode}/{fundCode}/report-data/investment-reports/investment-summary:
    get:
      operationId: investmentSummary
      summary: investmentSummary
      description: Statement of investments held by the fund and their unrealised gains
        to date.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - name: atDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: groupBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/InvestmentGroupingType'
      - name: includeIncomeExpected
        in: query
        required: false
        schema:
          type: boolean
      - name: costBaseType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CostbaseType'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/InvestmentReports_InvestmentSummary'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.read
components:
  parameters:
    fundCodeParam:
      name: fundCode
      description: Class entity code
      in: path
      required: true
      schema:
        type: string
        example: demo-fund
    groupByParam:
      name: groupBy
      in: query
      description: The grouping method to use on the investment accounts
      required: false
      schema:
        $ref: '#/components/schemas/InvestmentGroupingType'
    businessCodeParam:
      name: businessCode
      in: path
      description: Class business code
      required: true
      schema:
        type: string
        example: demo-business
    yearParam:
      name: year
      description: The financial year to retrieve information
      in: query
      required: true
      schema:
        type: integer
        example: 2024
  schemas:
    AddressSummary:
      type: object
      required:
      - AddressLine1
      - AddressLine2
      - AddressLine3
      - PostCode
      - Locality
      - State
      - Country
      properties:
        AddressLine1:
          type: string
        AddressLine2:
          type: string
        AddressLine3:
          type: string
        PostCode:
          type: string
        Locality:
          type: string
        State:
          type: string
        Country:
          type: string
    ApiError:
      type: object
      required:
      - Code
      - Message
      properties:
        Code:
          type: string
        Message:
          type: string
    ApiResponseBase:
      type: object
      required:
      - ErrorCodes
      - Errors
      - CreatedUri
      - IsCreatedResponse
      properties:
        ErrorCodes:
          type: array
          items:
            type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
        CreatedUri:
          type: string
        IsCreatedResponse:
          type: boolean
    CostbaseType:
      type: string
      enum:
      - AccountingCostbase
      - CGTCostbase
    DateRange:
      type: object
      required:
      - StartPeriodDate
      - EndPeriodDate
      - IsEmpty
      - IsPopulated
      - NumberOfDaysContained
      - EpochStart
      - EpochEnd
      - MinDatePeriodUpdate
      properties:
        StartPeriodDate:
          type: string
          format: date
        EndPeriodDate:
          type: string
          format: date
        IsEmpty:
          type: boolean
        IsPopulated:
          type: boolean
        NumberOfDaysContained:
          type: integer
          format: int32
        EpochStart:
          type: string
          format: date
        EpochEnd:
          type: string
          format: date
        MinDatePeriodUpdate:
          type: string
          format: date
    DetailedFundAssetPosition_AssetClassBreakdown:
      type: object
      required:
      - Id
      - Description
      - AssetClassDescription
      - MarketValueOfAssetsHeld
      - UnsettledPositionOnAssetsHeld
      - TotalValueOfAssetsHeld
      properties:
        Id:
          type: string
        Description:
          type: string
        AssetClassDescription:
          type: string
        MarketValueOfAssetsHeld:
          type: number
          format: decimal
        UnsettledPositionOnAssetsHeld:
          type: number
          format: decimal
        TotalValueOfAssetsHeld:
          type: number
          format: decimal
    DetailedFundAssetPosition_AssetClassDesc:
      type: object
      required:
      - Id
      - Name
      - StrategyMinPercent
      - StrategyMaxPercent
      properties:
        Id:
          type: string
        Name:
          type: string
        StrategyMinPercent:
          type: number
          format: decimal
        StrategyMaxPercent:
          type: number
          format: decimal
        StrategyTargetPercent:
          type: number
          format: decimal
    DetailedFundAssetPosition_DetailedPortfolioAssetPosition:
      type: object
      required:
      - AssetClassDescs
      - HoldingAssetPositionList
      - StrategyEffectiveDateSpecified
      - PortfolioId
      - PortfolioName
      properties:
        AssetClassDescs:
          type: array
          items:
            $ref: '#/components/schemas/DetailedFundAssetPosition_AssetClassDesc'
        HoldingAssetPositionList:
          type: array
          items:
            $ref: '#/components/schemas/DetailedFundAssetPosition_HoldingAssetPosition'
        StrategyEffectiveDate:
          type: string
          format: date
        StrategyEffectiveDateSpecified:
          type: boolean
        PortfolioId:
          type: string
        PortfolioName:
          type: string
    DetailedFundAssetPosition_HoldingAssetPosition:
      type: object
      required:
      - Units
      - MarketPriceSpecified
      - AssetClassBreakdownList
      - MarketAndSecurityInfo
      - Description
      - ProductName
      - Code
      - MarketType
      - MarketTypeCode
      - Reference
      properties:
        Units:
          type: number
          format: decimal
        MarketPrice:
          type: number
          format: decimal
        MarketPriceSpecified:
          type: boolean
        AssetClassBreakdownList:
          type: array
          items:
            $ref: '#/components/schemas/DetailedFundAssetPosition_AssetClassBreakdown'
        MarketAndSecurityInfo:
          $ref: '#/components/schemas/MarketAndSecurityInfo'
        Description:
          type: string
        ProductName:
          type: string
        Code:
          type: string
        MarketType:
          type: string
        MarketTypeCode:
          type: string
        Reference:
          type: string
    DistributionReconciliationReport_DistHoldingSummary:
      type: object
      required:
      - HoldingAccountName
      - HoldingAccountCode
      - SecurityCode
      - ManagedAccountCode
      - Grouping
      - NetTrustDistribution
      - NonPrimaryProductionIncome
      - FrankingCredits
      - WithholdingTax
      - TaxExempt
      - TaxFree
      - TaxDeferred
      - CapitalReturns
      - AssessableAmounts
      - ForeignTaxCredits
      - DiscountedCapGains
      - CGTConcessionAmount
      - IndexedCapGains
      - OtherCapGains
      - GrossTrustAccounting
      - GrossTrustTax
      - MarketAndSecurityInfo
      - AmitAmount
      properties:
        HoldingAccountName:
          type: string
        HoldingAccountCode:
          type: string
        SecurityCode:
          type: string
        ManagedAccountCode:
          type: string
        Grouping:
          $ref: '#/components/schemas/HoldingGroupingDetails'
        NetTrustDistribution:
          type: number
          format: decimal
        NonPrimaryProductionIncome:
          type: number
          format: decimal
        FrankingCredits:
          type: number
          format: decimal
        WithholdingTax:
          type: number
          format: decimal
        TaxExempt:
          type: number
          format: decimal
        TaxFree:
          type: number
          format: decimal
        TaxDeferred:
          type: number
          format: decimal
        CapitalReturns:
          type: number
          format: decimal
        AssessableAmounts:
          type: number
          format: decimal
        ForeignTaxCredits:
          type: number
          format: decimal
        DiscountedCapGains:
          type: number
          format: decimal
        CGTConcessionAmount:
          type: number
          format: decimal
        IndexedCapGains:
          type: number
          format: decimal
        OtherCapGains:
          type: number
          format: decimal
        GrossTrustAccounting:
          type: number
          format: decimal
        GrossTrustTax:
          type: number
          format: decimal
        MarketAndSecurityInfo:
          $ref: '#/components/schemas/MarketAndSecurityInfo'
        AmitAmount:
          type: number
          format: decimal
    DistributionReconciliationReport_InvestmentGroup:
      type: object
      required:
      - Name
      - HoldingReconciliationSummaries
      - Totals
      properties:
        Name:
          type: string
        HoldingReconciliationSummaries:
          type: array
          items:
            $ref: '#/components/schemas/DistributionReconciliationReport_DistHoldingSummary'
        Totals:
          $ref: '#/components/schemas/DistributionReconciliationReport_DistHoldingSummary'
    DistributionReconciliationReport_ReconciliationBlock:
      type: object
      required:
      - GrossTrustNonPrimaryProduction
      - GrossTrustFrankingCredits
      - GrossTrustWithholdingTax
      - GrossTrustTotal
      - ForeignAssessable
      - ForeignTaxCredits
      - ForeignTotal
      - CapGainsDiscountable
      - CapGainsIndexed
      - CapGainsOther
      - CapGainsTotal
      properties:
        GrossTrustNonPrimaryProduction:
          type: number
          format: decimal
        GrossTrustFrankingCredits:
          type: number
          format: decimal
        GrossTrustWithholdingTax:
          type: number
          format: decimal
        GrossTrustTotal:
          type: number
          format: decimal
        ForeignAssessable:
          type: number
          format: decimal
        ForeignTaxCredits:
          type: number
          format: decimal
        ForeignTotal:
          type: number
          format: decimal
        CapGainsDiscountable:
          type: number
          format: decimal
        CapGainsIndexed:
          type: number
          format: decimal
        CapGainsOther:
          type: number
          format: decimal
        CapGainsTotal:
          type: number
          format: decimal
    FundAssetPosition_AssetClassDetails:
      type: object
      required:
      - AssetClassId
      - AssetClassName
      - ValueOfAssetsHeld
      - MarketValueOfAssetsHeld
      - UnsettledPositionOnAssetsHeld
      - AssetStrategyMinPercent
      - AssetStrategyMaxPercent
      - AssetStrategyOverallPercent
      properties:
        AssetClassId:
          type: string
        AssetClassName:
          type: string
        ValueOfAssetsHeld:
          type: number
          format: decimal
        MarketValueOfAssetsHeld:
          type: number
          format: decimal
        UnsettledPositionOnAssetsHeld:
          type: number
          format: decimal
        AssetStrategyMinPercent:
          type: number
          format: decimal
        AssetStrategyMaxPercent:
          type: number
          format: decimal
        AssetStrategyTargetPercent:
          type: number
          format: decimal
        AssetStrategyOverallPercent:
          type: number
          format: decimal
    FundAssetPosition_PortfolioAssetPosition:
      type: object
      required:
      - AssetClassDetailList
      - PortfolioId
      - PortfolioName
      - OverallValue
      - AssetPercentagesInvalid
      - AssetStrategyEffectiveDate
      properties:
        AssetClassDetailList:
          type: array
          items:
            $ref: '#/components/schemas/FundAssetPosition_AssetClassDetails'
        PortfolioId:
          type: string
        PortfolioName:
          type: string
        OverallValue:
          type: number
          format: decimal
        AssetPercentagesInvalid:
          type: boolean
        AssetStrategyEffectiveDate:
          type: string
          format: date
    HoldingAccountGrouping:
      type: string
      enum:
      - Fund
      - MarketType
      - AssetClass
      - AssetPool
      - Feed
      - None
      - GLClassification
    HoldingAccountType:
      type: string
      enum:
      - BankAccount
      - ForeignBankAccount
      - InvestmentAccount
      - PropertyAccount
      - CollectibleAccount
      - PlatformAccount
      - TermDepositAccount
    HoldingDailyAccountFlowDetails:
      type: object
      required:
      - FlowAmount
      - Acquisitions
      - Disposals
      properties:
        FlowAmount:
          type: number
          format: decimal
        Acquisitions:
          type: number
          format: decimal
        Disposals:
          type: number
          format: decimal
    HoldingDailyValuation:
      type: object
      required:
      - HoldingAccountId
      - HoldingAccountCode
      - Date
      - Quantity
      - QuantityChange
      - MarketValue
      - MarketValueChange
      - WeightInPortfolio
      - NetMarketValue
      - NetMarketValueChange
      properties:
        HoldingAccountId:
          type: string
        HoldingAccountCode:
          type: string
        Date:
          type: string
          format: date
        Quantity:
          type: number
          format: decimal
        QuantityChange:
          type: number
          format: decimal
        MarketValue:
          type: number
          format: decimal
        MarketValueChange:
          type: number
          format: decimal
        WeightInPortfolio:
          type: number
          format: decimal
        NetMarketValue:
          type: number
          format: decimal
        NetMarketValueChange:
          type: number
          format: decimal
        PriceDate:
          type: string
          format: date
    HoldingGroupingDetails:
      type: object
      required:
      - NO_FHR_CAPTION
      - Tags
      properties:
        NO_FHR_CAPTION:
          type: string
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/HoldingGroupingDetails_Tag'
    HoldingGroupingDetails_Tag:
      type: object
      required:
      - Type
      - Value
      properties:
        Type:
          $ref: '#/components/schemas/InvestmentGroupingType'
        Value:
          type: string
    HoldingValuationDetailsSummary_HoldingDetails:
      type: object
      required:
      - MarketAndSecurityInfo
      - HoldingAccountId
      - Code
      - HoldingAccountDescription
      - Grouping
      - Quantity
      - MarketValue
      - BookCost
      - UnsettledAmount
      - UnrealisedAccountingGainSpecified
      - UnrealisedAccountingGain
      - ValuationDate
      properties:
        MarketAndSecurityInfo:
          $ref: '#/components/schemas/MarketAndSecurityInfo'
        HoldingAccountId:
          type: string
        Code:
          type: string
        HoldingAccountDescription:
          type: string
        Grouping:
          $ref: '#/components/schemas/HoldingGroupingDetails'
        PriceDate:
          type: string
          format: date
        Price:
          type: number
          format: decimal
        Quantity:
          type: number
          format: decimal
        MarketValue:
          type: number
          format: decimal
        BookCost:
          type: number
          format: decimal
        UnsettledAmount:
          type: number
          format: decimal
        UnrealisedAccountingGainSpecified:
          type: boolean
        UnrealisedAccountingGain:
          type: number
          format: decimal
        ValuationDate:
          type: string
          format: date
    HoldingValuationDetailsSummary_MarketTypeDetails_:
      type: object
      required:
      - HoldingDetailList
      - MarketTypeId
      - MarketTypeName
      properties:
        HoldingDetailList:
          type: array
          items:
            $ref: '#/components/schemas/HoldingValuationDetailsSummary_HoldingDetails'
        MarketTypeId:
          type: string
        MarketTypeName:
          type: string
    HoldingValuationDetailsSummary_PortfolioDetails:
      type: object
      required:
      - MarketTypeDetailList
      - PortfolioId
      properties:
        MarketTypeDetailList:
          type: array
          items:
            $ref: '#/components/schemas/HoldingValuationDetailsSummary_MarketTypeDetails_'
        PortfolioId:
          type: string
    InvestmentGroupingType:
      type: string
      enum:
      - MarketType
      - Reference
      - AssetPool
      - GL
    InvestmentIncomeDetails_IncomeHoldingAccountItem:
      type: object
      required:
      - InvestmentName
      - TransactionItems
      properties:
        InvestmentName:
          type: string
        TransactionItems:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentIncomeDetails_IncomeTransactionItem'
    InvestmentIncomeDetails_IncomeTransactionItem:
      type: object
      required:
      - Date
      - Description
      - NetIncome
      - UnfrankedDividends
      - FrankedDividends
      - NetForeignIncome
      - FrankingCredit
      - ForeignTaxCredit
      - TfnCredits
      properties:
        Date:
          type: string
          format: date
        Description:
          type: string
        NetIncome:
          type: number
          format: decimal
        UnfrankedDividends:
          type: number
          format: decimal
        FrankedDividends:
          type: number
          format: decimal
        NetForeignIncome:
          type: number
          format: decimal
        FrankingCredit:
          type: number
          format: decimal
        ForeignTaxCredit:
          type: number
          format: decimal
        TfnCredits:
          type: number
          format: decimal
    InvestmentIncomeDetails_IncomeTypeItem:
      type: object
      required:
      - IncomeTypeName
      - IsDistribution
      - HoldingAccountItems
      properties:
        IncomeTypeName:
          type: string
        IsDistribution:
          type: boolean
        HoldingAccountItems:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentIncomeDetails_IncomeHoldingAccountItem'
    InvestmentIncome_HoldingAccountItem:
      type: object
      required:
      - Summary
      - MarketAndSecurityInfo
      - InvestmentName
      - Grouping
      properties:
        Summary:
          $ref: '#/components/schemas/InvestmentIncome_InvestmentIncomeSummary'
        MarketAndSecurityInfo:
          $ref: '#/components/schemas/MarketAndSecurityInfo'
        InvestmentName:
          type: string
        Grouping:
          $ref: '#/components/schemas/HoldingGroupingDetails'
    InvestmentIncome_InvestmentIncomeSummary:
      type: object
      required:
      - IncomeTotal
      - FrankingCredits
      - ForeignCredits
      - TFNCredits
      - TaxFree
      - TaxExempt
      - TaxDeferred
      - Expenses
      - DistributedCapitalGains
      - GST
      - TaxableIncomeExclCapitalGains
      - CapitalGainsIndexed
      - CapitalGainsDiscounted
      - CapitalGainsOther
      - CapitalGainsCGTConcession
      properties:
        IncomeTotal:
          type: number
          format: decimal
        FrankingCredits:
          type: number
          format: decimal
        ForeignCredits:
          type: number
          format: decimal
        TFNCredits:
          type: number
          format: decimal
        TaxFree:
          type: number
          format: decimal
        TaxExempt:
          type: number
          format: decimal
        TaxDeferred:
          type: number
          format: decimal
        Expenses:
          type: number
          format: decimal
        DistributedCapitalGains:
          type: number
          format: decimal
        GST:
          type: number
          format: decimal
        TaxableIncomeExclCapitalGains:
          type: number
          format: decimal
        CapitalGainsIndexed:
          type: number
          format: decimal
        CapitalGainsDiscounted:
          type: number
          format: decimal
        CapitalGainsOther:
          type: number
          format: decimal
        CapitalGainsCGTConcession:
          type: number
          format: decimal
    InvestmentIncome_MarketTypeItem:
      type: object
      required:
      - HoldingAccountItems
      - MarketTypeName
      properties:
        HoldingAccountItems:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentIncome_HoldingAccountItem'
        MarketTypeName:
          type: string
    InvestmentMovementSummary_HoldingSummary:
      type: object
      required:
      - OpeningQuantitySpecified
      - OpeningMarketValue
      - TotalAcquisitionQuantitySpecified
      - TotalDisposalQuantitySpecified
      - TotalDispoalCost
      - ClosingQuantitySpecified
      - MarketAndSecurityInfo
      - ChangeInMarketValue
      - Name
      - Code
      - Grouping
      - OpeningBookCost
      - TotalAcquisitionCost
      - TotalDisposalProceeds
      - ProfitOrLoss
      - ClosingBookCost
      - ClosingMarketValue
      properties:
        OpeningQuantitySpecified:
          type: boolean
        OpeningMarketValue:
          type: number
          format: decimal
        TotalAcquisitionQuantitySpecified:
          type: boolean
        TotalDisposalQuantitySpecified:
          type: boolean
        TotalDispoalCost:
          type: number
          format: decimal
        ClosingQuantitySpecified:
          type: boolean
        MarketAndSecurityInfo:
          $ref: '#/components/schemas/MarketAndSecurityInfo'
        ChangeInMarketValue:
          type: number
          format: decimal
        Name:
          type: string
        Code:
          type: string
        Grouping:
          $ref: '#/components/schemas/HoldingGroupingDetails'
        OpeningQuantity:
          type: number
          format: decimal
        OpeningBookCost:
          type: number
          format: decimal
        TotalAcquisitionQuantity:
          type: number
          format: decimal
        TotalAcquisitionCost:
          type: number
          format: decimal
        TotalDisposalQuantity:
          type: number
          format: decimal
        TotalDisposalProceeds:
          type: number
          format: decimal
        ProfitOrLoss:
          type: number
          format: decimal
        ClosingQuantity:
          type: number
          format: decimal
        ClosingBookCost:
          type: number
          format: decimal
        ClosingMarketValue:
          type: number
          format: decimal
    InvestmentMovementSummary_MktTypeItem:
      type: object
      required:
      - HoldPerfItems
      - MarketTypeName
      - MarketTypeCode
      properties:
        HoldPerfItems:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentMovementSummary_HoldingSummary'
        MarketTypeName:
          type: string
        MarketTypeCode:
          type: string
    InvestmentMovementSummary_PfItem:
      type: object
      required:
      - MktTypeItems
      - Id
      - PortfolioName
      properties:
        MktTypeItems:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentMovementSummary_MktTypeItem'
        Id:
          type: string
        PortfolioName:
          type: string
    InvestmentPerformanceReport_HoldingGroup:
      type: object
      required:
      - Name
      - Holdings
      - PerformanceSummary
      properties:
        Name:
          type: string
        Holdings:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentPerformanceReport_HoldingSummary'
        PerformanceSummary:
          $ref: '#/components/schemas/InvestmentPerformanceReport_InvestmentPerformanceSummary'
    InvestmentPerformanceReport_HoldingSummary:
      type: object
      required:
      - Name
      - Code
      - ManagedAccountCode
      - PerformanceSummary
      - IncludeInPerformanceReports
      - MarketAndSecurityInfo
      properties:
        Name:
          type: string
        Code:
          type: string
        ManagedAccountCode:
          type: string
        PerformanceSummary:
          $ref: '#/components/schemas/InvestmentPerformanceReport_InvestmentPerformanceSummary'
        IncludeInPerformanceReports:
          type: boolean
        MarketAndSecurityInfo:
          $ref: '#/components/schemas/MarketAndSecurityInfo'
    InvestmentPerformanceReport_InvestmentPerformanceSummary:
      type: object
      required:
      - OpeningBalance
      - TotalAcquisitions
      - TotalDisposals
      - ClosingBalance
      - NetInflow
      - ChangeInValue
      - Income
      - ExpectedIncomeSpecified
      - TotalReturn
      - TotalReturnPercentageSpecified
      - FallbackToSimpleRateOfReturn
      properties:
        OpeningBalance:
          type: number
          format: decimal
        TotalAcquisitions:
          type: number
          format: decimal
        TotalDisposals:
          type: number
          format: decimal
        ClosingBalance:
          type: number
          format: decimal
        NetInflow:
          type: number
          format: decimal
        ChangeInValue:
          type: number
          format: decimal
        Income:
          type: number
          format: decimal
        ExpectedIncome:
          type: number
          format: decimal
        ExpectedIncomeSpecified:
          type: boolean
        TotalReturn:
          type: number
          format: decimal
        TotalReturnPercentage:
          type: number
          format: decimal
        TotalReturnPercentageSpecified:
          type: boolean
        FallbackToSimpleRateOfReturn:
          type: boolean
    InvestmentPerformanceReport_Portfolio:
      type: object
      required:
      - PortfolioName
      - PerformanceSummary
      - HoldingGroups
      properties:
        PortfolioName:
          type: string
        PerformanceSummary:
          $ref: '#/components/schemas/InvestmentPerformanceReport_InvestmentPerformanceSummary'
        HoldingGroups:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentPerformanceReport_HoldingGroup'
    InvestmentReports_DateValue:
      type: object
      required:
      - Date
      - Amount
      properties:
        Date:
          type: string
          format: date
        Amount:
          type: number
          format: decimal
    InvestmentReports_DateValueRange:
      type: object
      required:
      - Values
      - Title
      properties:
        Values:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentReports_DateValue'
        Title:
          type: string
    InvestmentReports_DetailedFundAssetPosition:
      type: object
      required:
      - PortfolioAssetPositions
      - FundCode
      - FundName
      - atDate
      properties:
        PortfolioAssetPositions:
          type: array
          items:
            $ref: '#/components/schemas/DetailedFundAssetPosition_DetailedPortfolioAssetPosition'
        FundCode:
          type: string
        FundName:
          type: string
        atDate:
          type: string
          format: date
    InvestmentReports_DistributionReconciliationReport:
      type: object
      required:
      - StartDate
      - EndDate
      - FundName
      - GrossFrankingCredits
      - Summaries
      - Reconciliation
      - Totals
      - InvestmentGroups
      - InvestmentGroupingType
      properties:
        StartDate:
          type: string
          format: date
        EndDate:
          type: string
          format: date
        FundName:
          type: string
        GrossFrankingCredits:
          type: boolean
        Summaries:
          type: array
          items:
            $ref: '#/components/schemas/DistributionReconciliationReport_DistHoldingSummary'
        Reconciliation:
          $ref: '#/components/schemas/DistributionReconciliationReport_ReconciliationBlock'
        Totals:
          $ref: '#/components/schemas/DistributionReconciliationReport_DistHoldingSummary'
        InvestmentGroups:
          type: array
          items:
            $ref: '#/components/schemas/DistributionReconciliationReport_InvestmentGroup'
        InvestmentGroupingType:
          $ref: '#/components/schemas/InvestmentGroupingType'
    InvestmentReports_FundAssetPosition:
      type: object
      required:
      - PortfolioAssetPositions
      - FundCode
      - FundName
      - atDate
      properties:
        PortfolioAssetPositions:
          type: array
          items:
            $ref: '#/components/schemas/FundAssetPosition_PortfolioAssetPosition'
        FundCode:
          type: string
        FundName:
          type: string
        atDate:
          type: string
          format: date
    InvestmentReports_HoldingValuationDetailsSummary:
      type: object
      required:
      - PortfolioDetailList
      - FundCode
      - FundName
      - atDate
      properties:
        PortfolioDetailList:
          type: array
          items:
            $ref: '#/components/schemas/HoldingValuationDetailsSummary_PortfolioDetails'
        FundCode:
          type: string
        FundName:
          type: string
        atDate:
          type: string
          format: date
    InvestmentReports_InvestmentIncome:
      type: object
      required:
      - MarketTypeItems
      - FundName
      - FundCode
      - Period
      properties:
        MarketTypeItems:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentIncome_MarketTypeItem'
        FundName:
          type: string
        FundCode:
          type: string
        Period:
          type: string
          format: date
    InvestmentReports_InvestmentIncomeDetails:
      type: object
      required:
      - PeriodFrom
      - PeriodTo
      - FundName
      - FundCode
      - IncomeTypes
      properties:
        PeriodFrom:
          type: string
          format: date
        PeriodTo:
          type: string
          format: date
        FundName:
          type: string
        FundCode:
          type: string
        IncomeTypes:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentIncomeDetails_IncomeTypeItem'
    InvestmentReports_InvestmentMovementAndReturnsReport:
      type: object
      required:
      - MovementInValue
      - PortfolioReturn
      - ReturnsOverTime
      - ValueVersusInvestment
      properties:
        MovementInValue:
          $ref: '#/components/schemas/InvestmentReports_MovementInValueDetails'
        PortfolioReturn:
          $ref: '#/components/schemas/InvestmentReports_PortfolioReturnDetails'
        ReturnsOverTime:
          $ref: '#/components/schemas/InvestmentReports_ReturnsOverTimeDetails'
        ValueVersusInvestment:
          $ref: '#/components/schemas/InvestmentReports_ValueVersusInvestmentDetails'
    InvestmentReports_InvestmentMovementAndReturnsReportApiParameters:
      type: object
      required:
      - IncludeIncomeDeclareButNotPaid
      - IncludeCumulativeNetInvestInGraph
      - IncludeAfterExpensesInTwr
      - AsxIndexCode1
      - AsxIndexCode2
      properties:
        IncludeIncomeDeclareButNotPaid:
          type: boolean
        IncludeCumulativeNetInvestInGraph:
          type: boolean
        IncludeAfterExpensesInTwr:
          type: boolean
        AsxIndexCode1:
          type: string
        AsxIndexCode2:
          type: string
    InvestmentReports_InvestmentMovementSummary:
      type: object
      required:
      - PfItems
      - FundCode
      - FundName
      - DateRange
      properties:
        PfItems:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentMovementSummary_PfItem'
        FundCode:
          type: string
        FundName:
          type: string
        DateRange:
          type: string
          format: date
    InvestmentReports_InvestmentPerformanceReport:
      type: object
      required:
      - FundCode
      - FundName
      - DateRange
      - CalculationMethod
      - GroupingType
      - PortfolioSummaries
      - IncludeIncomeDeclared
      - DefaultPortfolioName
      properties:
        FundCode:
          type: string
        FundName:
          type: string
        DateRange:
          type: string
          format: date
        CalculationMethod:
          $ref: '#/components/schemas/PerformanceCalculationMethod'
        GroupingType:
          $ref: '#/components/schemas/InvestmentGroupingType'
        PortfolioSummaries:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentPerformanceReport_Portfolio'
        IncludeIncomeDeclared:
          type: boolean
        DefaultPortfolioName:
          type: string
    InvestmentReports_InvestmentSummary:
      type: object
      required:
      - FundName
      - FundCode
      - DateAsAt
      - MarketTypeItems
      - TotalCost
      - TotalMarket
      - TotalUnrealisedGain
      - TotalGainPercentage
      - TotalTotalPercentage
      - CostbaseType
      properties:
        FundName:
          type: string
        FundCode:
          type: string
        DateAsAt:
          type: string
          format: date
        MarketTypeItems:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentSummary_MarketTypeItem'
        TotalCost:
          type: number
          format: decimal
        TotalMarket:
          type: number
          format: decimal
        TotalUnrealisedGain:
          type: number
          format: decimal
        TotalGainPercentage:
          type: number
          format: decimal
        TotalTotalPercentage:
          type: number
          format: decimal
        TotalEstimatedIncome:
          type: number
          format: decimal
        TotalEstimatedYield:
          type: number
          format: decimal
        CostbaseType:
          $ref: '#/components/schemas/CostbaseType'
    InvestmentReports_MovementInValueDetails:
      type: object
      required:
      - StartingMarketValue
      - NetAdditionWithdrawal
      - TotalGainsAndLosses
      - TotalInvestmentIncome
      - MovementInIncomeDeclaredNotPaid
      - FundIncome
      - TotalPortfolioExpenses
      - Other
      - EndingMarketValue
      - MovementInValue
      properties:
        StartingMarketValue:
          type: number
          format: decimal
        NetAdditionWithdrawal:
          type: number
          format: decimal
        TotalGainsAndLosses:
          type: number
          format: decimal
        TotalInvestmentIncome:
          type: number
          format: decimal
        MovementInIncomeDeclaredNotPaid:
          type: number
          format: decimal
        FundIncome:
          type: number
          format: decimal
        TotalPortfolioExpenses:
          type: number
          format: decimal
        Other:
          type: number
          format: decimal
        EndingMarketValue:
          type: number
          format: decimal
        MovementInValue:
          type: number
          format: decimal
    InvestmentReports_PerformanceCalculationMethod:
      type: string
      enum:
      - SimpleDietz
      - ModifiedDietz
      - TimeWeightedReturn
    InvestmentReports_PortfolioReturnDetails:
      type: object
      required:
      - TotalGainsAndLosses
      - InvestmentIncome
      - GrossIncomeDeclaredNotPaid
      - Credits
      - TotalReturnBeforeExpenses
      - InvestmentExpenses
      - TotalReturnAfterExpenses
      - ReturnsTable
      properties:
        TotalGainsAndLosses:
          type: number
          format: decimal
        InvestmentIncome:
          type: number
          format: decimal
        GrossIncomeDeclaredNotPaid:
          type: number
          format: decimal
        Credits:
          type: number
          format: decimal
        TotalReturnBeforeExpenses:
          type: number
          format: decimal
        InvestmentExpenses:
          type: number
          format: decimal
        TotalReturnAfterExpenses:
          type: number
          format: decimal
        ReturnsTable:
          $ref: '#/components/schemas/InvestmentReports_PortfolioReturnPeriodTable'
    InvestmentReports_PortfolioReturnPeriodEntry:
      type: object
      required:
      - PeriodStartDate
      - EntryType
      - TotalReturnBeforeExpenses
      - TotalReturnAfterExpenses
      - Index1Value
      - Index2Value
      - HasBeenCalculated
      properties:
        PeriodStartDate:
          type: string
          format: date
        EntryType:
          $ref: '#/components/schemas/PortfolioReturnPeriodEntryType'
        TotalReturnBeforeExpenses:
          type: number
          format: decimal
        TotalReturnAfterExpenses:
          type: number
          format: decimal
        Index1Value:
          type: number
          format: decimal
        Index2Value:
          type: number
          format: decimal
        HasBeenCalculated:
          type: boolean
    InvestmentReports_PortfolioReturnPeriodTable:
      type: object
      required:
      - FromDate
      - ToDate
      - Index1Name
      - Index2Name
      - ComparisonPeriods
      - ReportingPeriod
      - IncludeAfterExpensesInTwr
      properties:
        FromDate:
          type: string
          format: date
        ToDate:
          type: string
          format: date
        Index1Name:
          type: string
        Index2Name:
          type: string
        ComparisonPeriods:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentReports_PortfolioReturnPeriodEntry'
        ReportingPeriod:
          $ref: '#/components/schemas/InvestmentReports_PortfolioReturnPeriodEntry'
        IncludeAfterExpensesInTwr:
          type: boolean
    InvestmentReports_RentalStatementReport:
      type: object
      required:
      - StartDate
      - EndDate
      - FundDetails
      - PropertyDetails
      properties:
        StartDate:
          type: string
          format: date
        EndDate:
          type: string
          format: date
        FundDetails:
          $ref: '#/components/schemas/RentalStatementReport_FundDetail'
        PropertyDetails:
          type: array
          items:
            $ref: '#/components/schemas/RentalStatementReport_PropertyDetail'
    InvestmentReports_ReturnsOverTimeDetails:
      type: object
      required:
      - BeforeExpenses
      - AfterExpenses
      - ComparisonIndexOne
      - ComparisonIndexTwo
      - IncludeAfterExpensesInTwr
      properties:
        BeforeExpenses:
          type: string
          format: date
        AfterExpenses:
          type: string
          format: date
        ComparisonIndexOne:
          type: string
          format: date
        ComparisonIndexTwo:
          type: string
          format: date
        IncludeAfterExpensesInTwr:
          type: boolean
    InvestmentReports_ValueVersusInvestmentDetails:
      type: object
      required:
      - PortfolioValue
      - CumulativeNet
      - CumulativeNetOpeningValue
      - CumulativeNetClosingValue
      - IncludeCumulativeInGraph
      properties:
        PortfolioValue:
          type: string
          format: date
        CumulativeNet:
          type: string
          format: date
        CumulativeNetOpeningValue:
          type: number
          format: decimal
        CumulativeNetClosingValue:
          type: number
          format: decimal
        IncludeCumulativeInGraph:
          type: boolean
    InvestmentSummary_HoldingAccountItem:
      type: object
      required:
      - Summary
      - MarketAndSecurityInfo
      - HoldingAccountName
      - HoldingAccountId
      - SecurityCode
      - ManagedAccountCode
      - Grouping
      properties:
        Summary:
          $ref: '#/components/schemas/InvestmentSummary_InvestmentPeformanceSummary'
        MarketAndSecurityInfo:
          $ref: '#/components/schemas/MarketAndSecurityInfo'
        HoldingAccountName:
          type: string
        HoldingAccountId:
          type: string
        SecurityCode:
          type: string
        ManagedAccountCode:
          type: string
        Grouping:
          $ref: '#/components/schemas/HoldingGroupingDetails'
    InvestmentSummary_InvestmentPeformanceSummary:
      type: object
      required:
      - UnitsSpecified
      - AverageCost
      - Market
      - UnrealisedGain
      - GainPercentage
      - TotalPercentage
      - SupressZeros
      properties:
        UnitsSpecified:
          type: boolean
        Units:
          type: number
          format: decimal
        AverageCost:
          type: number
          format: decimal
        MarketPrice:
          type: number
          format: decimal
        Cost:
          type: number
          format: decimal
        Market:
          type: number
          format: decimal
        UnrealisedGain:
          type: number
          format: decimal
        GainPercentage:
          type: number
          format: decimal
        TotalPercentage:
          type: number
          format: decimal
        EstimatedIncome:
          type: number
          format: decimal
        EstimatedYield:
          type: number
          format: decimal
        SupressZeros:
          type: boolean
    InvestmentSummary_MarketTypeItem:
      type: object
      required:
      - HoldingAccountItems
      - MarketTypeName
      - TotalCost
      - TotalMarket
      - TotalUnrealisedGain
      - TotalGainPercentage
      - TotalTotalPercentage
      properties:
        HoldingAccountItems:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentSummary_HoldingAccountItem'
        MarketTypeName:
          type: string
        TotalCost:
          type: number
          format: decimal
        TotalMarket:
          type: number
          format: decimal
        TotalUnrealisedGain:
          type: number
          format: decimal
        TotalGainPercentage:
          type: number
          format: decimal
        TotalTotalPercentage:
          type: number
          format: decimal
        TotalEstimatedIncome:
          type: number
          format: decimal
        TotalEstimatedYield:
          type: number
          format: decimal
    MarketAndSecurityInfo:
      type: object
      required:
      - SecurityCode
      - SecurityName
      - MarketCode
      - MarketAcronym
      properties:
        SecurityCode:
          type: string
        SecurityName:
          type: string
        MarketCode:
          type: string
        MarketAcronym:
          type: string
    MovementType:
      type: string
      enum:
      - CapitalHoldingTransaction
      - CostBaseAdjustmentTransaction
      - QuantityAdjustmentTransaction
      - IncomeExpenseTransaction
    PerformanceCalculationMethod:
      type: string
      enum:
      - SimpleDietz
      - ModifiedDietz
      - TimeWeightedReturn
    PerformancePeriod:
      type: object
      required:
      - StartDate
      - EndDate
      - StartingPortfolioValue
      - EndingPortfolioValue
      - FundExpenses
      - NetFlows
      - CumulativeReturn
      - CumulativeReturnCalcFailed
      - CumulativeReturnPercentage
      - PeriodReturn
      properties:
        StartDate:
          type: string
          format: date
        EndDate:
          type: string
          format: date
        StartingPortfolioValue:
          type: number
          format: decimal
        EndingPortfolioValue:
          type: number
          format: decimal
        FundExpenses:
          type: number
          format: decimal
        NetFlows:
          type: number
          format: decimal
        CumulativeReturn:
          type: number
          format: decimal
        CumulativeReturnCalcFailed:
          type: boolean
        CumulativeReturnPercentage:
          type: number
          format: decimal
        PeriodReturn:
          type: number
          format: decimal
    Portfolio:
      type: object
      required:
      - Key
      - Name
      - SortingValue
      - HoldingAccounts
      properties:
        Key:
          type: string
        Name:
          type: string
        SortingValue:
          type: string
        HoldingAccounts:
          type: array
          items:
            $ref: '#/components/schemas/Portfolio_HoldingSummary'
    PortfolioPerformanceData:
      type: object
      required:
      - Portfolio
      - StartDate
      - EndDate
      - Movements
      - ExpectedMovements
      - Valuations
      - DailyFlows
      - Periods
      - IsBenchmark
      - BenchmarkId
      properties:
        Portfolio:
          $ref: '#/components/schemas/Portfolio'
        StartDate:
          type: string
          format: date
        EndDate:
          type: string
          format: date
        Movements:
          type: array
          items:
            $ref: '#/components/schemas/Summaries_HoldingAccountMovement'
        ExpectedMovements:
          type: array
          items:
            $ref: '#/components/schemas/Summaries_HoldingAccountMovement'
        Valuations:
          type: array
          items:
            $ref: '#/components/schemas/HoldingDailyValuation'
        DailyFlows:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioPerformanceData_HoldingDailyFlowDetails'
        Periods:
          type: array
          items:
            $ref: '#/components/schemas/PerformancePeriod'
        IsBenchmark:
          type: boolean
        BenchmarkId:
          type: string
    PortfolioPerformanceData_HoldingDailyFlowDetails:
      type: object
      required:
      - HoldingAccountId
      - Date
      - Flow
      - Income
      - TaxCredits
      - HoldingFlow
      - QuantityChange
      properties:
        HoldingAccountId:
          type: string
        Date:
          type: string
          format: date
        Flow:
          type: number
          format: decimal
        Income:
          type: number
          format: decimal
        TaxCredits:
          type: number
          format: decimal
        HoldingFlow:
          $ref: '#/components/schemas/HoldingDailyAccountFlowDetails'
        QuantityChange:
          type: number
          format: decimal
    PortfolioReturnPeriodEntryType:
      type: string
      enum:
      - ReportRange
      - OneYear
      - ThreeYear
      - SinceOnSystemDate
    Portfolio_HoldingSummary:
      type: object
      required:
      - Id
      - Code
      - ManagedAccountCode
      - Name
      - MarketAndSecurityInfo
      - HoldingAccountType
      - IncludeInPerformanceReports
      properties:
        Id:
          type: string
        Code:
          type: string
        ManagedAccountCode:
          type: string
        Name:
          type: string
        MarketAndSecurityInfo:
          $ref: '#/components/schemas/Securities_MarketAndSecurityInfo'
        HoldingAccountType:
          $ref: '#/components/schemas/HoldingAccountType'
        IncludeInPerformanceReports:
          type: boolean
    PropertyType:
      type: string
      enum:
      - Commercial
      - Residential
    RentalStatementReport_BalanceDetail:
      type: object
      required:
      - Type
      - TaxReturnLabel
      - Amount
      - PriorYearAmount
      properties:
        Type:
          type: string
        TaxReturnLabel:
          type: string
        Amount:
          type: number
          format: decimal
        PriorYearAmount:
          type: number
          format: decimal
    RentalStatementReport_FundDetail:
      type: object
      required:
      - FundName
      - FundCode
      - ABN
      properties:
        FundName:
          type: string
        FundCode:
          type: string
        ABN:
          type: string
    RentalStatementReport_PropertyDetail:
      type: object
      required:
      - AccountName
      - Type
      - Address
      - NumberOfWeeksRented
      - IncomeAmounts
      - ExpenseAmounts
      - GrossRent
      - PriorYearGrossRent
      - TotalExpenses
      - PriorYearTotalExpenses
      - NetRent
      - PriorYearNetRent
      properties:
        AccountName:
          type: string
        Type:
          $ref: '#/components/schemas/PropertyType'
        Address:
          $ref: '#/components/schemas/AddressSummary'
        NumberOfWeeksRented:
          type: integer
          format: int32
        IncomeAmounts:
          type: array
          items:
            $ref: '#/components/schemas/RentalStatementReport_BalanceDetail'
        ExpenseAmounts:
          type: array
          items:
            $ref: '#/components/schemas/RentalStatementReport_BalanceDetail'
        GrossRent:
          type: number
          format: decimal
        PriorYearGrossRent:
          type: number
          format: decimal
        TotalExpenses:
          type: number
          format: decimal
        PriorYearTotalExpenses:
          type: number
          format: decimal
        NetRent:
          type: number
          format: decimal
        PriorYearNetRent:
          type: number
          format: decimal
    Securities_MarketAndSecurityInfo:
      type: object
      required:
      - SecurityCode
      - SecurityName
      - MarketCode
      - MarketAcronym
      properties:
        SecurityCode:
          type: string
        SecurityName:
          type: string
        MarketCode:
          type: string
        MarketAcronym:
          type: string
    StandardApiResponse:
      type: object
      allOf:
      - $ref: '#/components/schemas/ApiResponseBase'
    Summaries_HoldingAccountMovement:
      type: object
      required:
      - TransactionId
      - HoldingAccountId
      - MovementDate
      - MovementType
      - TransactionAmount
      - ProfitOrLoss
      - QuantityChange
      - BookCostChange
      - DepreciatedAmount
      - ChangeInMarketValue
      - FlowAmount
      - IncludeInMarketValuation
      - IsFrankingCredit
      properties:
        TransactionId:
          type: string
        HoldingAccountId:
          type: string
        EntitlementDate:
          type: string
          format: date
        PaymentDate:
          type: string
          format: date
        MovementDate:
          type: string
          format: date
        MovementType:
          $ref: '#/components/schemas/MovementType'
        TransactionAmount:
          type: number
          format: decimal
        ProfitOrLoss:
          type: number
          format: decimal
        QuantityChange:
          type: number
          format: decimal
        BookCostChange:
          type: number
          format: decimal
        DepreciatedAmount:
          type: number
          format: decimal
        ChangeInMarketValue:
          type: number
          format: decimal
        FlowAmount:
          type: number
          format: decimal
        IncludeInMarketValuation:
          type: boolean
        IsFrankingCredit:
          type: boolean
        IncomeAccountedDate:
          type: string
          format: date
    TrustIncomeScheduleReconciliationReportGetResponse:
      type: object
      properties:
        Data:
          type: object
          properties:
            StartDate:
              type: string
              example: "2023-07-01"
            EndDate:
              type: string
              example: "2024-06-30"
            FundName:
              type: string
              example: demo-fund
            Summaries:
              type: array
              items:
                $ref: "#/components/schemas/TrustIncomeScheduleDistHoldingsSummaries"
              xml:
                name: Summaries
                wrapped: true
            Totals:
              $ref: "#/components/schemas/TotalsTrustIncomeScheduleReconciliation"
            InvestmentGroups:
              type: array
              items:
                type: object
                properties:
                  Name:
                    type: string
                    example: Managed Fund Markets
                  TISDistHoldingsSummaries:
                    type: array
                    items:
                      $ref: "#/components/schemas/TrustIncomeScheduleDistHoldingsSummaries"
                  Totals:
                    $ref: "#/components/schemas/TotalsTrustIncomeScheduleReconciliation"
            InvestmentGroupingType:
              type: string
              example: MarketType
      xml:
        name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
        wrapped: false
    TotalsTrustIncomeScheduleReconciliation:
      type: object
      properties:
        NonPrimaryProductionIncome:
          type: number
          example: 0
        FrankedDistribution:
          type: number
          example: 0
        FrankingCredits:
          type: number
          example: 0
        TFNWithHeld:
          type: number
          example: 0
        WithholdingTax:
          type: number
          example: 0
        ForeignWithheld:
          type: number
          example: 0
        CapitalReturns:
          type: number
          example: 0
        CapitalGains:
          type: number
          example: 0
        GrossCapitalGains:
          type: number
          example: 0
        CGTDiscountApplied:
          type: number
          example: 0
        OtherAssesableForeignIncome:
          type: number
          example: 0
        ForeignIncomeTaxOffset:
          type: number
          example: 0
        ForeignShareOfCreditTaxWithheld:
          type: number
          example: 0
        TaxExempt:
          type: number
          example: 0
        TaxFree:
          type: number
          example: 0
        TaxDeferred:
          type: number
          example: 0
        AmitAmount:
          type: number
          example: 0

    TrustIncomeScheduleDistHoldingsSummaries:
      type: object
      properties:
        HoldingAccountName:
          type: string
          example:
            AMP CustomSuper - Colonial First StatWholesale Property Securities
            &lt;T&gt;
        HoldingAccountCode:
          type: string
          example: "13768"
        SecurityCode:
          type: string
          example: null
        ManagedAccountCode:
          type: string
          example: null
        MarketAndSecurityInfo:
          $ref: "#/components/schemas/MarketAndSecurityInfo"
        NonPrimaryProductionIncome:
          type: number
          example: 0
        FrankedDistribution:
          type: number
          example: 0
        FrankingCredits:
          type: number
          example: 0
        TFNWithHeld:
          type: number
          example: 0
        ForeignWithheld:
          type: number
          example: 0
        CapitalReturns:
          type: number
          example: 0
        CapitalGains:
          type: number
          example: 0
        GrossCapitalGains:
          type: number
          example: 0
        CGTDiscountApplied:
          type: number
          example: 0
        OtherAssessableForeignIncome:
          type: number
          example: 0
        ForeignIncomeTaxOffset:
          type: number
          example: 0
        TaxExempt:
          type: number
          example: 0
        TaxDeferred:
          type: number
          example: 0
        TaxFree:
          type: number
          example: 0
        AmitAmount:
          type: number
          example: 0
        Grouping:
          type: object
          properties:
            tags:
              type: array
              items:
                type: object
                properties:
                  Type:
                    type: string
                    xml:
                      attribute: true
                  Value:
                    type: string
                    xml:
                      attribute: true
                xml:
                  name: Tag
              xml:
                name: Tags
                wrapped: true
          example:
            tags:
              - Type: AssetPool
                Value: Default Pool
              - Type: GL
                Value: Managed Investments
              - Type: MarketType
                Value: Managed Fund Market
              - Type: Reference
                Value: No Reference
        GrossDistribution:
          type: number
          example: 0
        GrossTaxStatement:
          type: number
          example: 0
        Variance:
          type: number
          example: 0
      xml:
        name: TISDistHoldingsSummary
        wrapped: true

    InternalErrorCommon:
      type: object
      properties:
        Code:
          type: string
          example: API_INTERNAL_ERROR
        Message:
          type: string
          example: An unexpected error occurred on the server. Please try again later.
      xml:
        name: Error
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ForbiddenErrorCommon:
      type: object
      properties:
        Code:
          type: string
          example: FORBIDDEN
        Message:
          type: string
          example: You do not have permission to access this resource.
      xml:
        name: Error
    ResourceUnavailableErrorCommon:
      type: object
      properties:
        Code:
          type: string
          example: API_NOT_FOUND
        Message:
          type: string
          example: Resource not available or user does not have access to the fund.
      xml:
        name: Error
    UnauthorizedErrorCommon:
      type: object
      properties:
        Code:
          type: string
          example: API_NOT_AUTHORISED
        Message:
          type: string
          example: Not authorised
      xml:
        name: Error
        wrapped: false
  securitySchemes:
    Class_oAuth:
      type: oauth2
      description: Class uses oAuth2 and OpenID for authentication and authorisation
      flows:
        authorizationCode:
          authorizationUrl: 'https://app.class-test.com.au/connect/authorize'
          tokenUrl: 'https://app.class-test.com.au/connect/token'
          scopes:
            business.fund.list: List summarised data of funds in the business
            business.fund.create: Create new funds in the business
            fund.details.read: View basic fund details
            fund.details.maintain: View and maintain basic fund details
            fund.member.read: View member details
            fund.member.maintain: View and maintain member details
            fund.read: View all fund information
            fund.maintain: View and maintain all fund information
        clientCredentials:
          tokenUrl: 'https://app.class-test.com.au/connect/token'
          scopes:
            business.fund.list: List summarised data of funds in the business
            business.fund.create: Create new funds in the business
            fund.details.read: View basic fund details
            fund.details.maintain: View and maintain basic fund details
            fund.member.read: View member details
            fund.member.maintain: View and maintain member details
            fund.read: View all fund information
            fund.maintain: View and maintain all fund information