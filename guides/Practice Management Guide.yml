openapi: 3.0.1
info:
  title: Practice Management Recipe
  version: 1.0.0000
  description: |
   - Key features of Class and Practice Management Integration:
      Where updates made to fund details in Class (e.g. name, address, ABN/TFN are pushed to practice management client records)
      Updates also can be individual information of the members within an entity. 


   Environments:
   - PIE base url: https://apigateway.class-pie.com.au
   - Production base url: https://apigateway.class.com.au
  
servers:
  - url: https://apigateway.class-test.com.au/api/1.0
    description: Test Environment


paths:
  /f/{businessCode}/{fundCode}/fund-data/fund-detail:
    get:
      operationId: getFundDetail
      summary: GetFundDetail
      description: Access fund information such as the funds name, ABN, status, and contact details.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/FundData_FundDetail'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.details.read
    post:
      operationId: UpdateDetailsFundCommunity
      summary: UpdateDetailsFundCommunity
      description: Update the details of a fund into Class.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundData_FundDetail'
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FundData_AllFundsList'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
        - Class_oAuth:
          - fund.details.maintain
  /f/{businessCode}/{fundCode}/member-data/member-detail:
    get:
      operationId: getMembersDetail
      summary: GetMembersDetail
      description: The list of all the members within the fund with basic details.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/MemberData_MemberDetail'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.member.read
  /f/{businessCode}/{fundCode}/member-data/member-detail/{id}:
    get:
      operationId: getMemberDetail
      summary: GetMemberDetail
      description: The complete details of a member within the fund.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - name: id
        in: path
        description: Unique Guid request path
        required: true
        schema:
          $ref: '#/components/schemas/Api_RequestId'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                type: object
                required:
                - Data
                properties:
                  Data:
                    $ref: '#/components/schemas/MemberData_MemberDetail'
                allOf:
                - $ref: '#/components/schemas/ApiResponseBase'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      security:
      - Class_oAuth:
        - fund.member.read
    post:
      operationId: postMemberDetail
      summary: PostMemberDetail
      description: Update the complete details of a member within the fund.
      parameters:
      - $ref: '#/components/parameters/businessCodeParam'
      - $ref: '#/components/parameters/fundCodeParam'
      - name: id
        in: path
        description: Unique Guid request path
        required: true
        schema:
          $ref: '#/components/schemas/Api_RequestId'
      responses:
        '200':
          description: Success (Ok)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardApiResponse'
        '400':
          description: Error Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ErrorResponse'
                      wrapped: true
                      name: Errors
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnauthorizedErrorCommon'
            application/xml:
              schema:
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
                type: object
                properties:
                  Errors:
                    type: object
                    properties:
                      ApiError:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnauthorizedErrorCommon'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ForbiddenErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '404':
          description: Resource not available or user does not have access to the
            fund
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceUnavailableErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
            application/xml:
              schema:
                type: object
                properties:
                  Errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalErrorCommon'
                    xml:
                      wrapped: true
                      name: Errors
                xml:
                  wrapped: false
                  name: ApiResponse xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberData_MemberDetail'
      security:
      - Class_oAuth:
        - fund.member.maintain
components:
  parameters:
    fundCodeParam:
      name: fundCode
      description: Class entity code
      in: path
      required: true
      schema:
        type: string
        example: demo-fund
    businessCodeParam:
      name: businessCode
      in: path
      description: Class business code
      required: true
      schema:
        type: string
        example: demo-business
  
  schemas:
    InternalErrorCommon:
      type: object
      properties:
        Code:
          type: string
          example: API_INTERNAL_ERROR
        Message:
          type: string
          example: An unexpected error occurred on the server. Please try again later.
      xml:
        name: Error
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ForbiddenErrorCommon:
      type: object
      properties:
        Code:
          type: string
          example: FORBIDDEN
        Message:
          type: string
          example: You do not have permission to access this resource.
      xml:
        name: Error
    ResourceUnavailableErrorCommon:
      type: object
      properties:
        Code:
          type: string
          example: API_NOT_FOUND
        Message:
          type: string
          example: Resource not available or user does not have access to the fund.
      xml:
        name: Error
    UnauthorizedErrorCommon:
      type: object
      properties:
        Code:
          type: string
          example: API_NOT_AUTHORISED
        Message:
          type: string
          example: Not authorised
      xml:
        name: Error
        wrapped: false
    
    Api_RequestId:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/guid'
    guid:
      type: string

    ApiRestLink:
      type: object
      required:
      - Id
      - Url
      properties:
        Id:
          type: string
        Url:
          type: string

    ApiError:
      type: object
      required:
      - Code
      - Message
      properties:
        Code:
          type: string
        Message:
          type: string
    ApiResponseBase:
      type: object
      required:
      - ErrorCodes
      - Errors
      - CreatedUri
      - IsCreatedResponse
      properties:
        ErrorCodes:
          type: array
          items:
            type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
        CreatedUri:
          type: string
        IsCreatedResponse:
          type: boolean
    StandardApiResponse:
      type: object
      allOf:
      - $ref: '#/components/schemas/ApiResponseBase'

    MemberData_MemberDetail:
      type: object
      required:
      - Link
      - Status
      - PersonalDetails
      - MembersDetails
      - ContactDetails
      - BeneficiaryDetails
      - MemberTransitionDetails
      properties:
        Link:
          $ref: '#/components/schemas/ApiRestLink'
        Status:
          $ref: '#/components/schemas/StatusCode'
        PersonalDetails:
          $ref: '#/components/schemas/MemberDetail_PersonalDetail'
        MembersDetails:
          $ref: '#/components/schemas/MemberDetail_MemberDetails'
        ContactDetails:
          $ref: '#/components/schemas/MemberDetail_MemberContactDetail'
        BeneficiaryDetails:
          $ref: '#/components/schemas/MemberDetail_BeneficiaryDetail'
        MemberTransitionDetails:
          $ref: '#/components/schemas/MemberDetail_MemberTransitionDetail'
    
    
    MemberDetail_BeneficiaryDetail:
      type: object
      required:
      - EffectiveDateSpecified
      - ExpiryDateSpecified
      - NominationType
      - Details
      properties:
        EffectiveDate:
          type: string
          format: date-time
        EffectiveDateSpecified:
          type: boolean
        ExpiryDate:
          type: string
          format: date-time
        ExpiryDateSpecified:
          type: boolean
        NominationType:
          type: string
        Details:
          type: string
    MemberDetail_InvitationDetail:
      type: object
      required:
      - InvitationStatus
      - CanInviteUsers
      - PersistedEmailAddress
      - MemberId
      properties:
        InvitationStatus:
          $ref: '#/components/schemas/PartyRoleUserInvitationStatus'
        CanInviteUsers:
          type: boolean
        PersistedEmailAddress:
          type: string
        MemberId:
          type: string
    PartyRoleUserInvitationStatus:
      type: string
      enum:
      - NotApplicable
      - NotInvited
      - Invited
      - AccessGranted
      - AccessSuspended
      - CantBeInvited

    MemberDetail_MemberContactDetail:
      type: object
      required:
      - HomePhone
      - WorkPhone
      - Mobile
      - Direct
      - InvitationDetails
      properties:
        PreferredVoiceContact:
          $ref: '#/components/schemas/VoiceContactType'
        PreferredWrittenContact:
          $ref: '#/components/schemas/WrittenContactType'
        HomePhone:
          type: string
        WorkPhone:
          type: string
        Mobile:
          type: string
        Direct:
          type: string
        InvitationDetails:
          $ref: '#/components/schemas/MemberDetail_InvitationDetail'
    WrittenContactType:
      type: string
      enum:
      - Email
      - MailingAddress
      - Fax
      - PhysicalAddress
    
    MemberDetail_MemberDetails:
      type: object
      required:
      - Number
      - LeaveFundDateSpecified
      - EligibleServicePeriodStartDateSpecified
      - EligibleServicePeriodStartDateBackupSpecified
      - AustralianResident
      - TaxFileNumber
      - ClaimTaxFreeThreshold
      - FloodLevyExempt
      - CentrelinkDVAReferenceNumber
      properties:
        Number:
          type: string
        JoinFundDate:
          type: string
          format: date-time
        LeaveFundDate:
          type: string
          format: date-time
        LeaveFundDateSpecified:
          type: boolean
        EligibleServicePeriodStartDate:
          type: string
          format: date-time
        EligibleServicePeriodStartDateSpecified:
          type: boolean
        EligibleServicePeriodStartDateBackup:
          type: string
          format: date-time
        EligibleServicePeriodStartDateBackupSpecified:
          type: boolean
        AustralianResident:
          type: boolean
        TaxFileNumber:
          type: string
        ClaimTaxFreeThreshold:
          type: boolean
        DeathSumInsured:
          type: number
          format: decimal
        TpdSumInsured:
          type: number
          format: decimal
        SalaryContinuanceSumInsured:
          type: number
          format: decimal
        FloodLevyExempt:
          type: boolean
        CentrelinkDVAReferenceNumber:
          type: string
    MemberDetail_MemberTransitionDetail:
      type: object
      required:
      - MemberId
      - Transitions
      properties:
        MemberId:
          type: string
        Transitions:
          type: array
          items:
            $ref: '#/components/schemas/MemberTransitionDetail_Transition'
    MemberDetail_PersonalDetail:
      type: object
      required:
      - Title
      - FirstName
      - MiddleNames
      - LastName
      - Gender
      - DateOfDeathSpecified
      - PreferredSalutation
      - PreferredName
      properties:
        Title:
          type: string
        FirstName:
          type: string
        MiddleNames:
          type: string
        LastName:
          type: string
        Gender:
          $ref: '#/components/schemas/Gender'
        DateOfBirth:
          type: string
          format: date-time
        DateOfDeath:
          type: string
          format: date-time
        DateOfDeathSpecified:
          type: boolean
        PreferredSalutation:
          type: string
        PreferredName:
          type: string
    MemberTransitionDetail_Transition:
      type: object
      required:
      - TransitionId
      - Date
      - Type
      - Status
      properties:
        TransitionId:
          type: string
        Date:
          type: string
          format: date-time
        Type:
          type: string
        Status:
          $ref: '#/components/schemas/StatusCode'
    
    FundData_FundDetail:
      type: object
      required:
        - Link
        - Status
        - FundDetails
        - ContactDetails
      properties:
        Link:
          $ref: '#/components/schemas/ApiRestLink'
        Status:
          $ref: '#/components/schemas/StatusCode'
        FundDetails:
          $ref: '#/components/schemas/FundData_FundBasicDetail'
        ContactDetails:
          $ref: '#/components/schemas/FundData_FundContactDetail'
    
    FundData_FundBasicDetail:
      type: object
      required:
        - Brand
        - Tags
        - Code
        - Name
        - PreviousName
        - LegalType
        - IsResident
        - Abn
        - Tfn
        - Sfn
        - RseRegistrationNumber
        - LastActivatedBy
        - LastSuspendedBy
        - IsNonSuper
        - Asn
      properties:
        Brand:
          type: string
        Tags:
          type: array
          items:
            type: string
        EstablishmentDeedDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        FundStartDate:
          type: string
          format: date-time
        OnSystemDate:
          type: string
          format: date-time
        Code:
          type: string
        Name:
          type: string
        PreviousName:
          type: string
        LegalType:
          $ref: '#/components/schemas/LegalEntityType'
        IsResident:
          type: boolean
        Abn:
          type: string
        Tfn:
          type: string
        Sfn:
          type: string
        RseRegistrationNumber:
          type: string
        RseEffectiveDate:
          type: string
          format: date-time
        LastActivated:
          type: string
          format: date-time
        LastActivatedBy:
          type: string
        LastSuspended:
          type: string
          format: date-time
        LastSuspendedBy:
          type: string
        IsNonSuper:
          type: boolean
        Asn:
          type: string
    FundData_FundContactDetail:
      type: object
      required:
        - Phone
        - Url
      properties:
        Phone:
          type: string
        Url:
          type: string

    FundData_AllFundsList:
      type: object
      required:
        - Funds
        - Count
      properties:
        Funds:
          type: array
          items:
            $ref: '#/components/schemas/FundData_BasicFundInfo'
        Count:
          type: integer
          format: int32
    FundData_BasicFundInfo:
      type: object
      required:
        - Id
        - ScopeUrl
        - FriendlyScopeUrl
        - LegalEntityType
        - StatusCode
      properties:
        Id:
          $ref: '#/components/schemas/guid'
        ScopeUrl:
          type: string
        FriendlyScopeUrl:
          type: string
        LegalEntityType:
          $ref: '#/components/schemas/LegalEntityType'
        StatusCode:
          $ref: '#/components/schemas/StatusCode'
    Gender:
      type: string
      enum:
      - Male
      - Female
      - Other
      - NotStated
    StatusCode:
      type: string
      enum:
      - Active
      - Cancelled
      - Pending
      - Suspended
    
    VoiceContactType:
      type: string
      enum:
      - Home
      - Mobile
      - Work
      - Business
      - Direct

    LegalEntityType:
      type: string
      enum:
        - SMSF
        - SAF
        - Personal
        - Trust
        - Company
        - Partnership
        - Consolidated
  securitySchemes:
    Class_oAuth:
      type: oauth2
      description: Class uses oAuth2 and OpenID for authentication and authorisation
      flows:
        authorizationCode:
          authorizationUrl: 'https://app.class-test.com.au/connect/authorize'
          tokenUrl: 'https://app.class-test.com.au/connect/token'
          scopes:
            business.fund.list: List summarised data of funds in the business
            business.fund.create: Create new funds in the business
            fund.details.read: View basic fund details
            fund.details.maintain: View and maintain basic fund details
            fund.member.read: View member details
            fund.member.maintain: View and maintain member details
            fund.read: View all fund information
            fund.maintain: View and maintain all fund information
        clientCredentials:
          tokenUrl: 'https://app.class-test.com.au/connect/token'
          scopes:
            business.fund.list: List summarised data of funds in the business
            business.fund.create: Create new funds in the business
            fund.details.read: View basic fund details
            fund.details.maintain: View and maintain basic fund details
            fund.member.read: View member details
            fund.member.maintain: View and maintain member details
            fund.read: View all fund information
            fund.maintain: View and maintain all fund information